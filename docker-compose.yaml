version: "3"

services:
  prod_app:
    container_name: kaf-app
    build: prod_app
    command: run dev-server
    ports:
      - 8074:8000
    volumes:
      - "./prod_app:/app"

  cons_app:
    build:
        context: .
        dockerfile: cons.Dockerfile
    container_name: kaf-client
    restart: "unless-stopped"
    ports:
      - "8073:8000"
    volumes:
      - "./consumer1:/consapp"

  cons_app2:
    build:
        context: .
        dockerfile: cons2.Dockerfile
    container_name: kaf-client2
    restart: "unless-stopped"
    ports:
      - "8071:8000"
    volumes:
      - "./consumer2:/app"

  cons_app3:
    build:
        context: .
        dockerfile: cons3.Dockerfile
    container_name: kaf-client3
    restart: "unless-stopped"
    ports:
      - "8072:8000"
    volumes:
      - "./consumer3:/app"

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kaf-ui
    ports:
      - "8070:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka1:9092

  zookeeper:
    restart: always
    image: docker.io/bitnami/zookeeper:3.8
    container_name: kaf-zk
    ports:
      - "3181:2181"
    volumes:
      - "zookeeper-volume:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka1:
    restart: always
    image: docker.io/bitnami/kafka:3.3
    container_name: kaf-kf1
    ports:
      - "9093:9093"
    volumes:
      - "kafka-volume:/bitnami"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka1:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
volumes:
  kafka-volume:
  zookeeper-volume:
